import{_ as a,c as n,J as i,aq as t,E as e,o as p}from"./chunks/framework.ATjo20Wq.js";const E=JSON.parse('{"title":"vite相关配置","description":"","frontmatter":{},"headers":[],"relativePath":"工具/vite.md","filePath":"工具/vite.md","lastUpdated":1745042540000}'),l={name:"工具/vite.md"},o=t(`<h1 id="vite相关配置" tabindex="-1">vite相关配置 <a class="header-anchor" href="#vite相关配置" aria-label="Permalink to &quot;vite相关配置&quot;">​</a></h1><h2 id="一、配置-别名" tabindex="-1">一、配置 ’@‘别名 <a class="header-anchor" href="#一、配置-别名" aria-label="Permalink to &quot;一、配置 ’@‘别名&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>resolve: {</span></span>
<span class="line"><span>        alias: {</span></span>
<span class="line"><span>            &quot;@&quot;: resolve(__dirname, &#39;src&#39;), // 路径别名</span></span>
<span class="line"><span>        },</span></span>
<span class="line"><span>        extensions: [&#39;.js&#39;, &#39;.json&#39;, &#39;.ts&#39;] // 使用路径别名时想要省略的后缀名，可以自己 增减</span></span>
<span class="line"><span>    }</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>{</span></span>
<span class="line"><span>    &quot;compilerOptions&quot; : {</span></span>
<span class="line"><span>        // ...</span></span>
<span class="line"><span>        &quot;baseUrl&quot;: &quot;.&quot;, // 用于设置解析非相对模块名称的基本目录，相对模块不会受到baseUrl的影响</span></span>
<span class="line"><span>        &quot;paths&quot;: { // 用于设置模块名到基于baseUrl的路径映射</span></span>
<span class="line"><span>            &quot;@/*&quot;: [&quot;src/*&quot;]</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>        // ...</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre></div><h2 id="二、环境变量" tabindex="-1">二、环境变量 <a class="header-anchor" href="#二、环境变量" aria-label="Permalink to &quot;二、环境变量&quot;">​</a></h2><p>在webpack时期，<strong>process.env</strong>是一个环境变量，但是在vite更换了这个，而是使用 <strong>import.meta.env</strong>这个变量。</p><ul><li>import.meta.env.MODE: {string} 应用运行的<a href="https://link.juejin.cn?target=https%3A%2F%2Fvitejs.cn%2Fvite3-cn%2Fguide%2Fenv-and-mode.html%23modes" target="_blank" rel="noreferrer">模式</a>。</li><li>import.meta.env.BASE_URL: {string} 部署应用时的基本 URL。他由<a href="https://link.juejin.cn?target=https%3A%2F%2Fvitejs.cn%2Fvite3-cn%2Fconfig%2Fshared-options.html%23base" target="_blank" rel="noreferrer">base配置项</a>决定。</li><li>import.meta.env.PROD：{boolean} 应用是否运行在生产环境。</li><li>import.meta.env.DEV: {boolean} 应用是否运行在开发环境 (永远与 import.meta.env.PROD相反)。</li><li>import.meta.env.SSR: {boolean} 应用是否运行在 <a href="https://link.juejin.cn?target=https%3A%2F%2Fvitejs.cn%2Fvite3-cn%2Fguide%2Fssr.html%23conditional-logic" target="_blank" rel="noreferrer">server</a> 上。</li></ul><h3 id="自定义环境变量" tabindex="-1">自定义环境变量 <a class="header-anchor" href="#自定义环境变量" aria-label="Permalink to &quot;自定义环境变量&quot;">​</a></h3><p>vite会自动加载**.vite<strong>或者</strong>.vite[mode]<strong>文件，一般我们只需要新建</strong>.env.development<strong>和</strong>.env.production**文件来表示开发环境和生产环境。 <strong>注意：只有以VITE_为前缀的变量才能识别。</strong></p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VITE_APP_BASE_API</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">api</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">VITE_APP_SERVER_URL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> http</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//127.0.0.1:9999</span></span></code></pre></div><h3 id="加载自定义-env文件" tabindex="-1">加载自定义.env文件 <a class="header-anchor" href="#加载自定义-env文件" aria-label="Permalink to &quot;加载自定义.env文件&quot;">​</a></h3><p>默认加载开发环境和生成环境，如果新建一个测试环境要怎么获取变量，可以在package.json中指定。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;scripts&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vite --mode test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;dev&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vite&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  &quot;build&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vite build&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">},</span></span></code></pre></div>`,13);function r(h,c,d,k,g,u){const s=e("test");return p(),n("div",null,[o,i(s)])}const m=a(l,[["render",r]]);export{E as __pageData,m as default};
