import{d as m,h as t,c as w,m as d,Q as b,J as o,aq as u,E as f,o as B,q as y,s as k,_ as q}from"./chunks/framework.ODH9prVs.js";const e=c=>(y("data-v-b36b11de"),c=c(),k(),c),C=u('<h1 id="盒模型" tabindex="-1" data-v-b36b11de>盒模型 <a class="header-anchor" href="#盒模型" aria-label="Permalink to &quot;盒模型&quot;" data-v-b36b11de>​</a></h1><p data-v-b36b11de>盒子分为块级盒子和内联盒子，盒子由content、padding、border、margin组成。</p><div class="codebox" data-v-b36b11de><div class="w-200px bg-lightBlue p-20px mb-20px border-20 border-main" data-v-b36b11de><div class="bg-yellow" data-v-b36b11de>son</div></div><div class="w-200px bg-lightBlue p-20px border-main border-20 border-main" data-v-b36b11de><div class="bg-yellow" data-v-b36b11de>son</div></div></div><h2 id="块级盒子" tabindex="-1" data-v-b36b11de>块级盒子 <a class="header-anchor" href="#块级盒子" aria-label="Permalink to &quot;块级盒子&quot;" data-v-b36b11de>​</a></h2><p data-v-b36b11de>有以下特点：</p><ol data-v-b36b11de><li data-v-b36b11de>独占一行，默认宽度为父级的宽度</li><li data-v-b36b11de>可以设置width、height</li><li data-v-b36b11de>内边距（padding）, 外边距（margin）和 边框（border）会将其他元素从当前盒子周围“推开”</li></ol>',6),U={class:"codebox"},F=e(()=>d("ul",null,[d("li",null,"元素1")],-1)),P=e(()=>d("ul",null,[d("li",null,"元素2")],-1)),S=u('<div class="codebox" data-v-b36b11de> 三人行必有我师：每个人身上都有值得我们<div class="border-main p-10px m-10px" data-v-b36b11de>学习</div>的地方，我们应该虚心学习他人的长处。一失足成千古恨：小错误可能会导致大后果，我们要时刻保持警觉，避免犯错。 </div><p data-v-b36b11de><strong data-v-b36b11de>常见的块级元素有：</strong><code data-v-b36b11de>div</code>，<code data-v-b36b11de>p</code>，<code data-v-b36b11de>h1-h6</code></p><h2 id="内联盒子" tabindex="-1" data-v-b36b11de>内联盒子 <a class="header-anchor" href="#内联盒子" aria-label="Permalink to &quot;内联盒子&quot;" data-v-b36b11de>​</a></h2><p data-v-b36b11de>有以下特点：</p><ol data-v-b36b11de><li data-v-b36b11de>不换行，默认宽度为content宽度</li><li data-v-b36b11de>设置width、height不生效</li><li data-v-b36b11de>垂直方向的内边距、外边距以及边框会被应用但是不会把其他处于 inline 状态的盒子推开。</li><li data-v-b36b11de>水平方向的内边距、外边距以及边框会被应用且会把其他处于 inline 状态的盒子推开。</li></ol>',5),z={class:"codebox"},W=e(()=>d("span",null,null,-1)),I=e(()=>d("ul",null,[d("li",null,"元素1")],-1)),N=e(()=>d("ul",null,[d("li",null,"元素2")],-1)),V=u('<div class="codebox" data-v-b36b11de> 三人行必有我师：每个人身上都有值得我们<span class="border-main p-10px m-20px" data-v-b36b11de>学习</span>的地方，我们应该虚心学习他人的长处。一失足成千古恨：小错误可能会导致大后果，我们要时刻保持警觉，避免犯错。 </div><p data-v-b36b11de><strong data-v-b36b11de>常见的行内元素有：</strong><code data-v-b36b11de>span</code>，<code data-v-b36b11de>a</code></p><h2 id="特殊的行内块级元素" tabindex="-1" data-v-b36b11de>特殊的行内块级元素 <a class="header-anchor" href="#特殊的行内块级元素" aria-label="Permalink to &quot;特殊的行内块级元素&quot;" data-v-b36b11de>​</a></h2><p data-v-b36b11de>它是一个特殊的元素，既有以下特点：</p><ol data-v-b36b11de><li data-v-b36b11de>盒子不换行</li><li data-v-b36b11de>可以设置width、height</li><li data-v-b36b11de>内边距（padding）, 外边距（margin）和 边框（border）会将其他元素从当前盒子周围“推开”</li></ol>',5),E={class:"codebox"},J=e(()=>d("ul",null,[d("li",null,"元素1")],-1)),j=e(()=>d("ul",null,[d("li",null,"元素2")],-1)),D=u('<p data-v-b36b11de><strong data-v-b36b11de>常见的块级元素有：</strong> 所有的可替换元素</p><h2 id="宽度计算" tabindex="-1" data-v-b36b11de>宽度计算 <a class="header-anchor" href="#宽度计算" aria-label="Permalink to &quot;宽度计算&quot;" data-v-b36b11de>​</a></h2><p data-v-b36b11de>默认的宽度计算为 width + padding*2 + border*2。</p><p data-v-b36b11de>这里涉及一个重要的属性设置：<code data-v-b36b11de>box-sizing</code>，用于控制元素的盒模型的计算方式。</p><p data-v-b36b11de>它有如下属性：</p><ul data-v-b36b11de><li data-v-b36b11de>content-box：元素的宽度和高度仅包括内容区域，不包括内边距、边框和外边距（默认）</li><li data-v-b36b11de>border-box：元素的宽度和高度包括内容区域、内边距和边框，但不包括外边距（高频）</li><li data-v-b36b11de>padding-box：元素的宽度和高度包括内容区域和内边距，但不包括边框和外边距（几乎不使用）</li></ul>',6),H={class:"codebox"},L=e(()=>d("ul",null,[d("li",null,"content-box")],-1)),M=e(()=>d("div",{class:"bg-yellow"},"box1",-1)),O=[M],Q=e(()=>d("ul",null,[d("li",null,"padding-box")],-1)),T=e(()=>d("div",{class:"bg-yellow"},"box2",-1)),A=[T],G=e(()=>d("ul",null,[d("li",null,"border-box")],-1)),K=e(()=>d("div",{class:"bg-yellow"},"box2",-1)),R=[K],X=e(()=>d("ul",null,[d("li",null,"width")],-1)),Y=e(()=>d("ul",null,[d("li",null,"padding")],-1)),Z=e(()=>d("ul",null,[d("li",null,"border")],-1)),$=u('<h2 id="bfc-block-formatting-context" tabindex="-1" data-v-b36b11de>BFC（Block Formatting Context） <a class="header-anchor" href="#bfc-block-formatting-context" aria-label="Permalink to &quot;BFC（Block Formatting Context）&quot;" data-v-b36b11de>​</a></h2><p data-v-b36b11de>即块级格式化上下文，它是页面中的一块渲染区域，并且有一套属于自己的渲染规则：</p><ul data-v-b36b11de><li data-v-b36b11de>内部的盒子会在垂直方向上一个接一个的放置</li><li data-v-b36b11de>对于同一个BFC的俩个相邻的盒子的margin会发生重叠，与方向无关。</li><li data-v-b36b11de>每个元素的左外边距与包含块的左边界相接触（从左到右），即使浮动元素也是如此</li><li data-v-b36b11de>BFC的区域不会与float的元素区域重叠</li><li data-v-b36b11de>计算BFC的高度时，浮动子元素也参与计算</li><li data-v-b36b11de>BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素，反之亦然</li></ul><p data-v-b36b11de>触发BFC的条件包含不限于：</p><ul data-v-b36b11de><li data-v-b36b11de>根元素，即HTML元素</li><li data-v-b36b11de>浮动元素：float值为left、right</li><li data-v-b36b11de>overflow值不为 visible，为 auto、scroll、hidden</li><li data-v-b36b11de>display的值为inline-block、inltable-cell、table-caption、table、inline-table、flex、inline-flex、grid、inline-grid</li><li data-v-b36b11de>position的值为absolute或fixed</li></ul><p data-v-b36b11de>主要作用：</p><ul data-v-b36b11de><li data-v-b36b11de>高度塌陷</li><li data-v-b36b11de>清楚浮动</li><li data-v-b36b11de>消除重叠</li></ul><div class="codebox" data-v-b36b11de><div class="flex justify-around" data-v-b36b11de><div data-v-b36b11de><div class="boxes mb-30px" data-v-b36b11de></div><div class="boxes mt-30px" data-v-b36b11de></div></div><div data-v-b36b11de><div class="boxes mb-30px" data-v-b36b11de></div><div class="overflow-hidden" data-v-b36b11de><div class="boxes mt-30px" data-v-b36b11de></div></div></div></div></div><div class="codebox" data-v-b36b11de><div class="par block" data-v-b36b11de><div class="child" data-v-b36b11de></div><div class="child" data-v-b36b11de></div></div><div class="par1 mt-100px" data-v-b36b11de><div class="child" data-v-b36b11de></div><div class="child" data-v-b36b11de></div></div></div><div class="codebox" data-v-b36b11de><div class="aside" data-v-b36b11de></div><div class="main" data-v-b36b11de></div><hr data-v-b36b11de><div class="aside" data-v-b36b11de></div><div class="main overflow-hidden" data-v-b36b11de></div></div>',10),td=JSON.parse('{"title":"盒模型","description":"","frontmatter":{},"headers":[],"relativePath":"前端/css/盒模型.md","filePath":"前端/css/盒模型.md","lastUpdated":1745040158000}'),dd={name:"前端/css/盒模型.md"},ad=m({...dd,setup(c){t(0);const p=t(100),r=t(100),h=t(100),x=t(100),g=t(100),_=t(100),s=t(100),v=t(0),n=t(0);return t(`.box1 {
    box-sizing: content-box;
    padding: 20px;
    margin: 20px;
    width: 200px;
    border: 20px solid #ccc;
  }
  .box2 {
    box-sizing: padding-box;
    padding: 20px;
    margin: 20px;
    width: 200px;
    border: 20px solid #ccc;
  }
  .box3 {
    box-sizing: border-box;
    padding: 20px;
    margin: 20px;
    width: 200px;
    border: 20px solid #ccc;
  }
  `),(ld,a)=>{const i=f("n-slider");return B(),w("div",null,[C,d("div",U,[d("div",{class:"bg-lightBlue",style:b({width:p.value+"%"})},"元素1",4),d("div",{class:"bg-#f60",style:b({width:r.value+"%"})},"元素2",4)]),F,d("p",null,[o(i,{value:p.value,"onUpdate:value":a[0]||(a[0]=l=>p.value=l),step:1},null,8,["value"])]),P,d("p",null,[o(i,{value:r.value,"onUpdate:value":a[1]||(a[1]=l=>r.value=l),step:1},null,8,["value"])]),S,d("div",z,[d("span",{class:"bg-lightBlue",style:b({width:h.value+"%"})},"元素1",4),d("span",{class:"bg-#f60",style:b({width:x.value+"%"})},"元素2",4),W]),I,d("p",null,[o(i,{value:h.value,"onUpdate:value":a[2]||(a[2]=l=>h.value=l),step:1},null,8,["value"])]),N,d("p",null,[o(i,{value:x.value,"onUpdate:value":a[3]||(a[3]=l=>x.value=l),step:1},null,8,["value"])]),V,d("div",E,[d("div",{class:"inline-block bg-lightBlue",style:b({width:g.value+"%"})},"元素1",4),d("div",{class:"inline-block bg-#f60",style:b({width:_.value+"%"})},"元素2",4)]),J,d("p",null,[o(i,{value:g.value,"onUpdate:value":a[4]||(a[4]=l=>g.value=l),step:1},null,8,["value"])]),j,d("p",null,[o(i,{value:_.value,"onUpdate:value":a[5]||(a[5]=l=>_.value=l),step:1},null,8,["value"])]),D,d("div",H,[L,d("div",{id:"box1",style:b({width:s.value+"px",padding:v.value+"px",borderWidth:n.value+"px"}),class:"box-content bg-lightBlue border-#ccc border-solid"},O,4),Q,d("div",{id:"box2",style:b({width:s.value+"px",padding:v.value+"px",borderWidth:n.value+"px",boxSizing:"padding-box"}),class:"bg-lightBlue box-padding my-20px border-#ccc border-solid"},A,4),G,d("div",{id:"box3",style:b({width:s.value+"px",padding:v.value+"px",borderWidth:n.value+"px"}),class:"bg-lightBlue box-border border-#ccc border-solid"},R,4)]),X,d("p",null,[o(i,{value:s.value,"onUpdate:value":a[6]||(a[6]=l=>s.value=l),step:1},null,8,["value"])]),Y,d("p",null,[o(i,{value:v.value,"onUpdate:value":a[7]||(a[7]=l=>v.value=l),step:1},null,8,["value"])]),Z,d("p",null,[o(i,{value:n.value,"onUpdate:value":a[8]||(a[8]=l=>n.value=l),step:1},null,8,["value"])]),$])}}}),id=q(ad,[["__scopeId","data-v-b36b11de"]]);export{td as __pageData,id as default};
